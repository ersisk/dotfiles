"" Source your .vimrc
"source ~/.vimrc

Plug 'easymotion/vim-easymotion'
Plug 'preservim/nerdtree'
Plug 'terryma/vim-multiple-cursors'

" Set leader
let mapleader = " "
set clipboard+=unnamed

" Plugins
set commentary
set ideajoin
set highlightedyank
set argtextobj
set which-key
set NERDTree
set easymotion

" Configs
set number
set relativenumber
set ignorecase
set smartcase
set incsearch
set visualbell


"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.
set scrolloff=5

" Do incremental searching.
set incsearch

" disable the timeout option
set notimeout

" increase the timeoutlen (default: 1000), don't add space around the equal sign
set timeoutlen=5000


" Don't use Ex mode, use Q for formatting.
map Q gq

" Reload
nnoremap <leader>so :source ~/.ideavimrc<CR>

" Better indentation
vnoremap < <gv
vnoremap > >gv

map <leader>w :w<CR>

" Navigation
nmap <C-h> <c-w>h
nmap <C-j> <c-w>j
nmap <C-k> <c-w>k
nmap <C-l> <c-w>l

nmap <C-o> <Action>(Back)
nmap <C-i> <Action>(Forward)

nmap <C-\> <Action>(ActivateProjectToolWindow)

" Finds
nmap <leader>fa <Action>(GotoAction)
nmap <leader>ff <Action>(GotoFile)
nmap <leader>fo <Action>(RecentFiles)
nmap <leader>fd <Action>(ShowNavBar)
nmap <leader>fs <Action>(FileStructurePopup)
nmap <leader>fw <Action>(FindInPath)
nmap <leader>fr <Action>(ReplaceInPath)
nmap <leader>e :NERDTree<CR>
nmap <leader>o :NERDTreeToggle<CR>
nmap <leader>ca <Action>(CloseOtherTabs)

" nmap <C-\> <Action>(ActivateTerminalToolWindow)

nmap [d <Action>(GotoPreviousError)
nmap ]d <Action>(GotoNextError)

nmap [f <Action>(MethodUp)
nmap ]f <Action>(Methdown)

nmap [c <Action>(VcsShowPrevChangeMarker)
nmap ]c <Action>(VcsShowNextChangeMarker)

nmap zc <Action>(CollapseRegion)
nmap zo <Action>(ExpandRegion)

nmap H <Action>(PreviousTab)
nmap L <Action>(NextTab)

" Git
nmap <leader>gg <Action>(VcsGroups)
nmap <leader>gc <Action>(CheckinProject)
nmap <leader>gb <Action>(Git.Branches)
nmap <leader>gd <Action>(Compare.SameVersion)
nmap <leader>gB <Action>(Git.CompareWithBranch)

" Code navigation
map gd <Action>(GotoDeclaration)
map gi <Action>(GotoImplementation)
map gt <Action>(GotoTest)
map g; <Action>(JumpToLastChange)

map <leader>t <Action>(ActivateTerminalToolWindow)

" Code Actions
map <leader>lr <Action>(RenameElement)
map <leader>la <Action>(ShowIntentionActions)
map <leader>lf <Action>(ReformatCode)
map <leader>d <Action>(Debug)
" Remap multiple-cursors shortcuts to match terryma/vim-multiple-cursors
nmap <C-n> <Plug>NextWholeOccurrence
xmap <C-n> <Plug>NextWholeOccurrence
nmap g<C-n> <Plug>NextOccurrence
xmap g<C-n> <Plug>NextOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence

" Note that the default <A-n> and g<A-n> shortcuts don't work on Mac due to dead keys.
" <A-n> is used to enter accented text e.g. Ã±
" Feel free to pick your own mappings that are not affected. I like to use <leader>
nmap <leader><C-n> <Plug>AllWholeOccurrences
xmap <leader><C-n> <Plug>AllWholeOccurrences
nmap <leader>g<C-n> <Plug>AllOccurrences
xmap <leader>g<C-n> <Plug>AllOccurrences
let g:WhichKeyDesc_multicursor = "<Space><C-n> Multiple Cursors"
let g:WhichKeyDesc_easymotion = "<Space><Space> Easymotion"
let g:WhichKeyDesc_debug        = "<Space>d Debug"
let g:WhichKeyDesc_rename       = "<Space>lr Rename"
let g:WhichKeyDesc_intentions   = "<Space>la Show Intention Actions"
let g:WhichKeyDesc_reformat     = "<Space>lf Reformat Code"
let g:WhichKeyDesc_terminal     = "<Space>t Terminal"
let g:WhichKeyDesc_nerdtree     = "<Space>e NERDTree"
let g:WhichKeyDesc_finds        = "<Space>f Finds"
let g:WhichKeyDesc_findfiles        = "<Space>ff Find Files"
let g:WhichKeyDesc_findrecent        = "<Space>fo Find Recent"
let g:WhichKeyDesc_findstructure        = "<Space>fs Find Structure"
let g:WhichKeyDesc_findpath        = "<Space>fw Find Path"
let g:WhichKeyDesc_findreplace        = "<Space>fr Find Replace"
let g:WhichKeyDesc_findaction        = "<Space>fa Find Action"
let g:WhichKeyDesc_codeaction        = "<Space>l Code Action"
let g:WhichKeyDesc_save        = "<Space>w Save"
let g:WhichKeyDesc_config        = "<Space>s Config"
let g:WhichKeyDesc_configreload        = "<Space>so Reload"
let g:WhichKeyDesc_git        = "<Space>g Git"


